/**
* Dungeon Creation Plugin (https://github.com/anthony-mills/procedural_dungeon)
*
* @author Anthony Mills <https://www.anthony-mills.com>
* @copyright 2017 Anthony Mills
* @license GPLV3
*/
Phaser.Plugin.DungeonCreator=function(e,t){this.game=e,Phaser.Plugin.call(this,e,t)},Phaser.Plugin.DungeonCreator.prototype=Object.create(Phaser.Plugin.prototype),Phaser.Plugin.DungeonCreator.prototype.init=function(){this.levelMap={},this.numRooms=0,this.numTiles=0,this.floorCount=0,this.setupDungeon({})},Phaser.Plugin.DungeonCreator.prototype.setupDungeon=function(e){this.wallKey=e.wall||"wall",this.floorKey=e.floor||"floor",this.roomMaxSize=e.room_max_size||5,this.roomMinSize=e.room_min_size||2,this.maxRooms=e.max_rooms||15,this.tileSize=e.tile_size||128,this.mapSize={},this.mapSize.x=e.map_size_x||3072,this.mapSize.y=e.map_size_y||3072},Phaser.Plugin.DungeonCreator.prototype.destroyMap=function(){this.levelMap.walls.callAll("kill"),this.levelMap.floors.callAll("kill"),this.levelMap={},this.numRooms=0,this.numTiles=0,this.floorCount=0},Phaser.Plugin.DungeonCreator.prototype.getRandom=function(e,t){return Math.floor(Math.random()*(t-e))+e},Phaser.Plugin.DungeonCreator.prototype.createMap=function(){this.levelMap.walls=this.game.add.group(),this.levelMap.walls.enableBody=!0,this.levelMap.floors=this.game.add.group();for(var e=0;e<this.mapSize.y;e+=this.tileSize)for(var t=0;t<this.mapSize.x;t+=this.tileSize)this.levelMap.walls.create(t,e,this.wallKey).body.immovable=!0;this.lastRoomCoords={x:128,y:128};for(var o=0;o<this.maxRooms;o++){var i=this.getRandom(this.roomMinSize,this.roomMaxSize)*this.tileSize,s=this.getRandom(this.roomMinSize,this.roomMaxSize)*this.tileSize;t=this.getRandom(1,this.mapSize.x/this.tileSize-(i/this.tileSize+1))*this.tileSize,e=this.getRandom(1,this.mapSize.y/this.tileSize-(i/this.tileSize+1))*this.tileSize,this.createRoom(t,t+i,e,e+s);var a=game.math.snapToFloor(t+i/2,this.tileSize),l=game.math.snapToFloor(e+s/2,this.tileSize),r=game.math.snapToFloor(this.lastRoomCoords.x,this.tileSize),h=game.math.snapToFloor(this.lastRoomCoords.y,this.tileSize);this.createHTunnel(r,a,h),this.createVTunnel(h,l,a),this.lastRoomCoords={x:t+i/2,y:e+s/2},this.numRooms++}this.game.physics.game.world.setBounds(0,0,this.mapSize.x,this.mapSize.y)},Phaser.Plugin.DungeonCreator.prototype.createFloor=function(e,t){fl=this.levelMap.floors.create(e,t,this.floorKey),this.game.physics.arcade.enable(fl),this.game.physics.arcade.overlap(fl,this.levelMap.walls,function(e,t){t.destroy()}),this.floorCount++,fl.destroy()},Phaser.Plugin.DungeonCreator.prototype.createRoom=function(e,t,o,i){for(var s=e;s<t;s+=this.tileSize)for(var a=o;a<i;a+=this.tileSize)this.createFloor(s,a)},Phaser.Plugin.DungeonCreator.prototype.createVTunnel=function(e,t,o){for(var i=Math.min(e,t),s=Math.max(e,t),a=i;a<s+8;a+=8)this.createFloor(o,a)},Phaser.Plugin.DungeonCreator.prototype.createHTunnel=function(e,t,o){for(var i=Math.min(e,t),s=Math.max(e,t),a=i;a<s+8;a+=8)this.createFloor(a,o)};