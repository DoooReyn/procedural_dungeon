/**
* Dungeon Creation Plugin (https://github.com/anthony-mills/procedural_dungeon)
*
* @author Anthony Mills <https://www.anthony-mills.com>
* @copyright 2017 Anthony Mills
* @license GPLV3
*/
Phaser.Plugin.DungeonCreator=function(a,b){this.game=a,Phaser.Plugin.call(this,a,b)},Phaser.Plugin.DungeonCreator.prototype=Object.create(Phaser.Plugin.prototype),Phaser.Plugin.DungeonCreator.prototype.init=function(){this.levelMap={},this.numRooms=0,this.numTiles=0,this.floorCount=0,this.setupDungeon({})},Phaser.Plugin.DungeonCreator.prototype.setupDungeon=function(a){this.wallKey=a.wall||"wall",this.floorKey=a.floor||"floor",this.roomMaxSize=a.room_max_size||5,this.roomMinSize=a.room_min_size||2,this.maxRooms=a.max_rooms||15,this.tileSize=a.tile_size||128,this.mapSize={},this.mapSize.x=a.map_size_x||3072,this.mapSize.y=a.map_size_y||3072},Phaser.Plugin.DungeonCreator.prototype.destroyMap=function(){this.levelMap.walls.callAll("kill"),this.levelMap.floors.callAll("kill"),this.levelMap={},this.numRooms=0,this.numTiles=0,this.floorCount=0},Phaser.Plugin.DungeonCreator.prototype.getRandom=function(a,b){return Math.floor(Math.random()*(b-a))+a},Phaser.Plugin.DungeonCreator.prototype.createMap=function(){this.levelMap.walls=this.game.add.group(),this.levelMap.walls.enableBody=!0,this.levelMap.floors=this.game.add.group();for(var a=0;a<this.mapSize.y;a+=this.tileSize)for(var b=0;b<this.mapSize.x;b+=this.tileSize){var c=this.levelMap.walls.create(b,a,this.wallKey);c.body.immovable=!0}this.lastRoomCoords={x:128,y:128};for(var d=0;d<this.maxRooms;d++){var e=this.getRandom(this.roomMinSize,this.roomMaxSize)*this.tileSize,f=this.getRandom(this.roomMinSize,this.roomMaxSize)*this.tileSize;b=this.getRandom(1,this.mapSize.x/this.tileSize-(e/this.tileSize+1))*this.tileSize,a=this.getRandom(1,this.mapSize.y/this.tileSize-(e/this.tileSize+1))*this.tileSize,this.createRoom(b,b+e,a,a+f);var i=game.math.snapToFloor(b+e/2,this.tileSize),j=game.math.snapToFloor(a+f/2,this.tileSize),k=game.math.snapToFloor(this.lastRoomCoords.x,this.tileSize),l=game.math.snapToFloor(this.lastRoomCoords.y,this.tileSize);this.createHTunnel(k,i,l,l),this.createVTunnel(l,j,i),this.lastRoomCoords={x:b+e/2,y:a+f/2},this.numRooms++}this.game.physics.game.world.setBounds(0,0,this.mapSize.x,this.mapSize.y)},Phaser.Plugin.DungeonCreator.prototype.createFloor=function(a,b){fl=this.levelMap.floors.create(a,b,this.floorKey),this.game.physics.arcade.enable(fl),this.game.physics.arcade.overlap(fl,this.levelMap.walls,function(a,b){b.destroy()}),this.floorCount++,fl.destroy()},Phaser.Plugin.DungeonCreator.prototype.createRoom=function(a,b,c,d){for(var e=a;e<b;e+=this.tileSize)for(var f=c;f<d;f+=this.tileSize)this.createFloor(e,f)},Phaser.Plugin.DungeonCreator.prototype.createVTunnel=function(a,b,c){for(var d=Math.min(a,b),e=Math.max(a,b),f=d;f<e+8;f+=8)this.createFloor(c,f)},Phaser.Plugin.DungeonCreator.prototype.createHTunnel=function(a,b,c){for(var d=Math.min(a,b),e=Math.max(a,b),f=d;f<e+8;f+=8)this.createFloor(f,c)};